import customtkinter
import os
from PIL import Image
import tkinter.messagebox as tkmb
from PIL import ImageTk, Image
import customtkinter as ctk
import requests
from tkinter import messagebox, Tk, Frame, Entry, Label, Button, Toplevel
from datetime import datetime
import hashlib

class App(customtkinter.CTk):
    def __init__(self):
        super().__init__()

        self.title("Aplicacion")
        self.geometry("900x550")

        # set grid layout 1x2
        self.grid_rowconfigure(0, weight=1)
        self.grid_columnconfigure(1, weight=1)

        # load images with light and dark mode image
        image_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), "test_images")
        self.logo_image = customtkinter.CTkImage(Image.open(os.path.join(image_path, "CustomTkinter_logo_single.png")), size=(26, 26))
        self.image_icon_image = customtkinter.CTkImage(Image.open(os.path.join(image_path, "image_icon_light.png")), size=(20, 20))
        self.home_image = customtkinter.CTkImage(light_image=Image.open(os.path.join(image_path, "home_dark.png")),
                                                 dark_image=Image.open(os.path.join(image_path, "home_light.png")), size=(20, 20))
        self.chat_image = customtkinter.CTkImage(light_image=Image.open(os.path.join(image_path, "chat_dark.png")),
                                                 dark_image=Image.open(os.path.join(image_path, "chat_light.png")), size=(20, 20))
        self.add_user_image = customtkinter.CTkImage(light_image=Image.open(os.path.join(image_path, "add_user_dark.png")),
                                                     dark_image=Image.open(os.path.join(image_path, "add_user_light.png")), size=(20, 20))
        self.large_test_image = customtkinter.CTkImage(light_image=Image.open(os.path.join(image_path, "large_test_image.png")),
                                                     dark_image=Image.open(os.path.join(image_path, "large_test_image.png")), size=(550, 200))

        # create navigation frame
        self.navigation_frame = customtkinter.CTkFrame(self, corner_radius=0)
        self.navigation_frame.grid(row=0, column=0, sticky="nsew")
        self.navigation_frame.grid_rowconfigure(7, weight=1)

        self.navigation_frame_label = customtkinter.CTkLabel(self.navigation_frame, text="   Ivan APP", image=self.logo_image,
                                                             compound="left", font=customtkinter.CTkFont(size=15, weight="bold"))
        self.navigation_frame_label.grid(row=0, column=0, padx=20, pady=20)

        self.home_button = customtkinter.CTkButton(self.navigation_frame, corner_radius=0, height=40, border_spacing=10, text="Home",
                                                   fg_color="transparent", text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                   image=self.home_image, anchor="w", command=self.home_button_event)
        self.home_button.grid(row=1, column=0, sticky="ew")

        self.frame_2_button = customtkinter.CTkButton(self.navigation_frame, corner_radius=0, height=40, border_spacing=10, text="Herramientas",
                                                      fg_color="transparent", text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                      image=self.chat_image, anchor="w", command=self.frame_2_button_event)
        self.frame_2_button.grid(row=2, column=0, sticky="ew")

        self.license_frame_button = customtkinter.CTkButton(self.navigation_frame, corner_radius=0, height=40, border_spacing=10, text="Licencias",
                                                        fg_color="transparent", text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                        image=self.add_user_image, anchor="w", command=self.license_frame_button_event)
        self.license_frame_button.grid(row=5, column=0, sticky="ew")

        self.frame_3_button = customtkinter.CTkButton(self.navigation_frame, corner_radius=0, height=40, border_spacing=10, text="Admin Menu",
                                                      fg_color="transparent", text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                      image=self.add_user_image, anchor="w", command=self.frame_3_button_event)
        self.frame_3_button.grid(row=3, column=0, sticky="ew")

        self.vip_frame_button = customtkinter.CTkButton(self.navigation_frame, corner_radius=0, height=40, border_spacing=10, text="VIP Menu",
                                                        fg_color="transparent", text_color=("gray10", "gray90"), hover_color=("gray70", "gray30"),
                                                        image=self.add_user_image, anchor="w", command=self.vip_frame_button_event)
        self.vip_frame_button.grid(row=4, column=0, sticky="ew")



        self.appearance_mode_menu = customtkinter.CTkOptionMenu(self.navigation_frame, values=["Light", "Dark", "System"],
                                                                command=self.change_appearance_mode_event)
        self.appearance_mode_menu.grid(row=6, column=0, padx=20, pady=20, sticky="s")

        self.cerrar_sesion = customtkinter.CTkButton(self.navigation_frame, text="Cerrar Sesion", fg_color="red", command=self.close_program)
        self.cerrar_sesion.grid(row=7, column=0, padx=20, pady=20, sticky="s")

        # HOME FRAME
        self.home_frame = customtkinter.CTkFrame(self, corner_radius=0, fg_color="transparent")
        self.home_frame.grid(row=0, column=1, sticky="nsew")

        self.home_frame_large_image_label = customtkinter.CTkLabel(self.home_frame, text="", image=self.large_test_image)
        self.home_frame_large_image_label.grid(row=0, column=0, padx=20, pady=10)

        self.home_textbox = customtkinter.CTkTextbox(self.home_frame, width=250, state="normal", font=("Arial", 20))
        self.home_textbox.grid(row=1, column=0, padx=(20, 0), pady=(10, 0), sticky="nsew")
        self.home_textbox.insert("0.0", "NOTAS DEL PARCHE\n\n" + "-Version 1.0\n-Añadido Menu VIP\n-Añadido Menu Admin")

        # SEGUNDO FRAME
        self.second_frame = customtkinter.CTkFrame(self, corner_radius=0, fg_color="transparent")
        self.second_frame.grid(row=0, column=1, padx=20, pady=10, sticky="nsew")

        self.home_frame_button_2_2 = customtkinter.CTkButton(self.second_frame, text="Calculadora", image=self.image_icon_image, compound="left")
        self.home_frame_button_2_2.grid(row=2, column=0, padx=20, pady=10, sticky="ns")

        self.home_frame_button_2_3 = customtkinter.CTkButton(self.second_frame, text="Notas", image=self.image_icon_image, compound="left")
        self.home_frame_button_2_3.grid(row=2, column=1, padx=20, pady=10, sticky="ns")

        self.home_frame_button_2_4 = customtkinter.CTkButton(self.second_frame, text="Soon", image=self.image_icon_image, compound="left",
                                                              command=self.vip_frame_button_event)
        self.home_frame_button_2_4.grid(row=2, column=2, padx=20, pady=10, sticky="ns")

        self.home_frame_button_2_5 = customtkinter.CTkButton(self.second_frame, text="Soon", image=self.image_icon_image, compound="left")
        self.home_frame_button_2_5.grid(row=3, column=0, padx=20, pady=10, sticky="ns")

        self.home_frame_button_2_6 = customtkinter.CTkButton(self.second_frame, text="Soon", image=self.image_icon_image, compound="left")
        self.home_frame_button_2_6.grid(row=3, column=1, padx=20, pady=10, sticky="ns")

        self.home_frame_button_2_7 = customtkinter.CTkButton(self.second_frame, text="Soon", image=self.image_icon_image, compound="left")
        self.home_frame_button_2_7.grid(row=3, column=2, padx=20, pady=10, sticky="ns")

        # LICENSE FRAME
        self.license_frame = customtkinter.CTkFrame(self, corner_radius=0, fg_color="transparent")
        self.license_frame.grid(row=0, column=1, padx=20, pady=10, sticky="nsew")

        self.license_frame_button1 = customtkinter.CTkButton(self.license_frame, text="Soon", image=self.image_icon_image, compound="left")
        self.license_frame_button1.grid(row=2, column=1, padx=20, pady=10, sticky="ns")

        # TERCER FRAME
        self.third_frame = customtkinter.CTkFrame(self, corner_radius=0, fg_color="transparent")

        # VIP FRAME
        self.vip_frame = customtkinter.CTkFrame(self, corner_radius=0, fg_color="transparent")
        self.vip_frame.grid(row=0, column=1, padx=20, pady=10, sticky="nsew")

        self.vip_frame_button1 = customtkinter.CTkButton(self.vip_frame, text="Soon", image=self.image_icon_image, compound="left")
        self.vip_frame_button1.grid(row=2, column=1, padx=20, pady=10, sticky="ns")



        # select default frame
        self.select_frame_by_name("home")

    ######################## -- FUNCIONES -- ########################

    def select_frame_by_name(self, name):
        # set button color for selected button
        self.home_button.configure(fg_color=("gray75", "gray25") if name == "home" else "transparent")
        self.frame_2_button.configure(fg_color=("gray75", "gray25") if name == "frame_2" else "transparent")
        self.frame_3_button.configure(fg_color=("gray75", "gray25") if name == "frame_3" else "transparent")
        self.vip_frame_button.configure(fg_color=("gray75", "gray25") if name == "vip_frame" else "transparent")
        self.license_frame_button.configure(fg_color=("gray75", "gray25") if name == "license_frame" else "transparent")
        # show selected frame
        if name == "home":
            self.home_frame.grid(row=0, column=1, sticky="nsew")
        else:
            self.home_frame.grid_forget()
        if name == "frame_2":
            self.second_frame.grid(row=0, column=1, sticky="nsew")
        else:
            self.second_frame.grid_forget()
        if name == "license_frame":
            self.license_frame.grid(row=0, column=1, sticky="nsew")
        else:
            self.license_frame.grid_forget()
        if name == "frame_3":
            self.third_frame.grid(row=0, column=1, sticky="nsew")
        else:
            self.third_frame.grid_forget()
        if name == "vip_frame":
            self.vip_frame.grid(row=0, column=1, sticky="nsew")
        else:
            self.vip_frame.grid_forget()


    def home_button_event(self):
        self.select_frame_by_name("home")

    def frame_2_button_event(self):
        self.select_frame_by_name("frame_2")

    def license_frame_button_event(self):
        self.select_frame_by_name("license_frame")

    def frame_3_button_event(self):
        self.select_frame_by_name("frame_3")

    def vip_frame_button_event(self):
        self.select_frame_by_name("vip_frame")
    

    def change_appearance_mode_event(self, new_appearance_mode):
        customtkinter.set_appearance_mode(new_appearance_mode)
    
    def close_program(self):
        self.quit() 


def main():

    # Después instancia App
    app = App()
    app.mainloop()

if __name__ == "__main__":
    main()
